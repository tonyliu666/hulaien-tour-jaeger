# <source>
#   @type tail
#   format json
#   read_from_head true
#   tag docker.log
#   # time_format %Y-%m-%d %H:%M:%S
#   path /fluentd/log/containers/*/*-json.log
#   pos_file /tmp/container-logs.pos
# </source>
# <source>
#   @type forward
#   port 24224
#   bind 0.0.0.0
# </source>

<source>
  @type tail
  format none
  read_from_head true
  tag flask.log
  path /input/flask.log
  pos_file /tmp/flask.log.pos
</source>

<filter flask.log>
  @type record_transformer
  <record>
    host_param "#{Socket.gethostname}"
  </record>
  #@type parser
  #key_name message  # Assuming the log message is stored under the "message" key
  #format json 
  # <parse>
    # @type regexp
    # expression /^(?<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) (?<severity>\w+) - (?<message>.*)$/
    # time_format %Y-%m-%d %H:%M:%S  # Adjust the timestamp format as needed
  # </parse>
  # @type regexp
  #   expression /^(?<timestamp>[^ ]+) (?<severity>\w+) trace_id=(?<trace_id>\S+) span_id=(?<span_id>\S+) resource\.service\.name=(?<service_name>\S+) trace_sampled=(?<trace_sampled>\S+) (?<message>.*)$/
  #   time_format %Y-%m-%d %H:%M:%S,%L 
</filter>

# <match flask.log>
#   @type file
#   path /output
# </match>
<match flask.log>
  @type elasticsearch
  # <format>
  #   @type json
  #  </format>
  host elasticsearch
  port 9200
  index_name flask-log
  # type_name flask
</match>



