version: "3"
services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.SQL
    container_name: POSTGRES_NAME
    volumes:
      - Data-volume:/var/lib/postgresql/data/:rw
    environment:
      - POSTGRES_USER=tonyliu666
      - POSTGRES_PASSWORD=t870101
      - POSTGRES_HOST=POSTGRES_NAME 
      - POSTGRES_PORT=5432 
      - POSTGRES_DB=db 
      - POSTGRES_INITDB_ARGS= --encoding=UTF-8
    # env_file:
    #   - database.env
    restart: unless-stopped
    expose:
      - "5432"
    networks: 
      - turingmysql
      - tracing
  chrome:
    image: test
    # build:
    #   context: ./Dockerfile.sel
    shm_size: 4gb
    container_name: CHROME
    expose : 
      - "4444"
      # - "9090"
    ports:
      - "4444:4444"
      # - "9090:9090"
    networks:
      - chrome_net
      - tracing
    # add selenium to jaeger
    command: >
      sh -c "
      ./start-grid-standalone.sh
      "
    # volumes:
    #   - "grid:/sel:rw"
  flask-web:
    image: main
    # build:
    #   context: ./Dockerfile
    container_name: flask-web
    depends_on:
      - db
      - chrome
    links:
      - db
      - chrome
    volumes:
      # - type: volume
      #   # source: Vol 
      #   target: /app
      # - type: bind
      #   source: /c/Projects/Go/src/kubernetes-service-mesh/test-storage 
      #   target: /app
      - ".:/app:rw"
      - ./logs/input.log:/var/log/applogs
    command: > 
      sh -c " 
        python /app/web/src/main.py 
      "  
    # add open telemetry in python 
    environment:
      - POSTGRES_USER=tonyliu666
      - POSTGRES_PASSWORD=t870101
      - POSTGRES_HOST=POSTGRES_NAME
      - POSTGRES_PORT=5432 
      - POSTGRES_DB=db
      - SELENIUM_REMOTE_HOST=chrome
      # - SELENIUM_REMOTE_HOST=localhost
    ports:
      - "8080:80"
    networks: 
      - turingmysql
      - chrome_net
      - tracing
      # - flask
      # - sel_net
  jaeger:
    container_name: Jaeger
    image: jaegertracing/all-in-one:latest
    networks:
      - tracing
    ports:
    - 16686:16686
    - 14250:14250
    - 6831:6831/udp
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearchJaeger:9200 # Elasticsearch server
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - ES_TAGS_AS_FIELDS_ALL=true 
    # environment:
    #   - SPAN_STORAGE_TYPE=elasticsearch
    #   - ES_SERVER_URLS=http://elasticsearch:9200
    #   - LOG_LEVEL=info
    # volumes:
    #   - Jaeger-vol:/var/lib/jaeger

  fluentd:
    container_name: fluentd
    user: root
    build:
      context: ./fluentd
    #image: fluentd
    # depends_on:
    #   - elasticsearch
    links:
      - "elasticsearch"
    volumes:
    # - ./file:/fluentd/log/files/ #Example: Reading logs from a file
    #- /var/lib/docker/containers:/fluentd/log/containers # Example: Reading docker logs
    - ./fluentd/conf:/fluentd/etc/
    #- ./logs/output.log:/output/ # Example: Fluentd will collect logs and store it here for demo
    - ./logs/input.log:/input/
    ports:
      # We need to expose these ports to the host so the Docker engine can log to it.
      - "127.0.0.1:24224:24224"
      - "127.0.0.1:24224:24224/udp"
    networks:
      - tracing
    logging:
      driver: "local"
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    expose:
      - "9201"
    networks:
      - tracing
    ports:
      - "9201:9200"
  elasticsearchJaeger:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    container_name: esjaeger
    environment:
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    expose:
      - "9202"
    networks:
      - tracing
    ports:
      - "9202:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS="http://elasticsearch:9200"
      - ELASTICSEARCH_URL="http://elasticsearch:9200"
    links:
      - "elasticsearch"
    networks:
      - tracing
    ports:
      - "5600:5601"


  # jaeger-query:
  #   image: jaegertracing/all-in-one:latest
  #   command: query
  #   ports:
  #     - "16687:16687"
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #     - ES_SERVER_URLS=http://elasticsearch:9200
  #     - LOG_LEVEL=info  
  #   networks:
  #     - tracing
volumes:
  Data-volume:
  
networks:
  turingmysql:
  chrome_net:
  tracing:
    name: tracing
  
